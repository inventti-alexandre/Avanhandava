@model Avanhandava.Domain.Models.Admin.DebitoDiretoModel
@using Avanhandava.Common;

@{
    ViewBag.Title = "Débito";
}

<h2>Débito</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdEmpresa)
                @Html.SelectEmpresa(Model.IdEmpresa)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdGrupoCusto)
                @Html.SelectGrupoCusto(Model.IdGrupoCusto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdItemCusto)
                @Html.SelectItemCusto(Model.IdItemCusto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdFornecedor)
                @Html.SelectFornecedor(Model.IdFornecedor)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Referencia)
                @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Descricao)
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdPgto)
                @Html.SelectPgto(Model.IdPgto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Vencto)
                @Html.EditorFor(model => model.Vencto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vencto, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Valor)
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdFpgto)
                @Html.SelectFPgto(Model.IdFpgto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.IdConta)
                @Html.SelectConta(Model.IdConta)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Cheque)
                @Html.EditorFor(model => model.Cheque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cheque, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Compensado)
                <div class="checkbox">
                    @Html.EditorFor(model => model.Compensado) lançar como compensado
                    @Html.ValidationMessageFor(model => model.Compensado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 top20">
                <input type="submit" value="Incluir" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <div id="debitos">
        @{if (Model.IdEmpresa > 0)
            {
                Html.RenderAction("DebitosLancados", new { idEmpresa = Model.IdEmpresa });

            }
        }
    </div>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        $("#IdGrupoCusto").change(function () {
            $("#IdItemCusto").empty();
            var id = $("#IdGrupoCusto").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetItens","Item")',
                dataType: 'json',
                data: { idGrupoCusto: id },
                cache: false,
                success: function (itens) {
                    $.each(itens, function (i, item) {
                        $("#IdItemCusto").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrive itens: ' + ex);
                }
            });
        });

        $("#IdEmpresa").change(function () {
            $("#IdConta").empty();
            var id = $("#IdEmpresa").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetContas","Conta")',
                dataType: 'json',
                data: { idEmpresa: id },
                cache: false,
                success: function (contas) {
                    $.each(contas, function (i, item) {
                        $("#IdConta").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    })
                },
                error: function (ex) {
                    alert('Fail to retrive itens: ' + ex);
                }
            });
        });
    });
</script>